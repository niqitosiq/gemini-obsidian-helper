name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov
    - name: Create mock environment file
      run: |
        touch .env
        echo "GEMINI_API_KEY=mock_key" >> .env
        echo "GEMINI_MODEL_NAME=gemini-2.0-flash" >> .env
        echo "TELEGRAM_BOT_TOKEN=mock_token" >> .env
        echo "TELEGRAM_USER_ID=123456789" >> .env
        echo "OBSIDIAN_DAILY_NOTES_FOLDER=Daily" >> .env
        echo "OBSIDIAN_VAULT_PATH=./vault" >> .env
    - name: Create necessary directories
      run: |
        mkdir -p vault
        mkdir -p temp_audio
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run tests
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false 